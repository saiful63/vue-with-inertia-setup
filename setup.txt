

1. Laravel Project Creation
composer create-project laravel/laravel my-app

2. Server Side Install
        (a) Inertia composer installation
            - composer require inertiajs/inertia-laravel
        (b) Configure Blade Template Engine - Prepare Master Blade Layout
            - /views/app.blade.php
            
           <!DOCTYPE html>
	  <html>
	  <head>
	    <meta charset="utf-8" />
	    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
	    @vite('resources/js/app.js')
	    @inertiaHead
	  </head>
	  <body>
	    @inertia
	  </body>
	</html>
	
        (c) Create Inertia Middleware
            - php artisan inertia:middleware
        (d) Add Inertia Middleware With Your Route Middleware(bootstrap/app.php)
              use App\Http\Middleware\HandleInertiaRequests;
              
              ->withMiddleware(function (Middleware $middleware) {
		    $middleware->web(append: [
			HandleInertiaRequests::class,
		    ]);
		})


3. Client Side Install
        (a) Install Vue JS
            npm install @inertiajs/vue3

        (b) configure vite
            - npm i @vitejs/plugin-vue

        (c) configure app.js
             - npm i vue
             - import { createApp, h } from 'vue'
             - import { createInertiaApp } from '@inertiajs/vue3'
             -createInertiaApp({
                resolve: name => {
                  const pages = import.meta.glob('./Pages/**/*.vue', { eager: true })
                  return pages[`./Pages/${name}.vue`]
                },
                setup({ el, App, props, plugin }) {
                  createApp({ render: () => h(App, props) })
                    .use(plugin)
                    .mount(el)
                },
              })

*Change vite config
   import vue from '@vitejs/plugin-vue'
       export default defineConfig({
	    plugins: [
		vue(),
	    ],
	});
	
*web.php
use Inertia\Inertia;

*component should be inside js/Pages/



4. Vue js front end structure inside  resources/js/-
      npm i bootstrap
    - Components (Naming Convention Optional)
    - Utility (Naming Convention Optional)
    - Pages ((Naming Convention Mandatory)


5. Lets create our first website
    - Home Page [AppNavbar+Hero+Footer]
    - Profile page [AppNavbar+ProfileForm+Footer]
    - Lets create a controller SiteController
    - Lets create function for Render Vue.js Pages
    - Lets define route in web.php


6. Let's Run Our Laravel+Vue Project
   - php artisan serve
   - npm run dev
   - Access From Running Via Vite
   - Access From Running Via Artisan


8. How Rendering Works Here
   - "/" Route-->Middleware-->Controller-->Render--->HomePage.vue
   - "/profile" Route-->Middleware-->Controller-->Render--->ProfilePage.vue

9. Set Our First SPA Navigation
   - Use Inertia Build In Link component


10. How to set Routing Progress Like Next JS
   -    npm i nprogress
   -    Add CSS CDN <link rel="stylesheet" href="{{url('https://cdnjs.cloudflare.com/ajax/libs/nprogress/0.2.0/nprogress.min.css')}}" />
   -    Add Route Start End End @app.js

## Important topic to read
1.https://medium.com/@mrrabbilhasan/laravel-vue-or-laravel-react-integration-with-laravel-inertia-tutorial-e41a0b9d7124


